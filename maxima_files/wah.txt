/* Maxima batch file for solving circuit transfer function from matrix representation  */
/* in symbolic form using Cramer's rule. The numerator and denominator expressions are */
/* evaluated separately as polynomial coefficients in powers of complex variable s.    */
/* This example solves the coefficients for  crybaby wah filter   circuit as Vout/Vin  */
/* Jarmo L. 9.8.2019 */

stardisp: true$           /* multiplication is displayed with an asterisk between operands */
ratmx: true$              /* matrix operations  are performed in CRE */
/* matrix obtained from current loops in the circuit */
writefile("den_wah.txt");
matrix(
[1/RI+s*CI,    -s*CI        ,    0                 ,    0     ,    0            ,    0                   ,    0                ,    0                          ,    0],
[-s*CI    , s*CI+1/rpi1+1/RF,    0                 ,    0     ,    0            ,    0                   ,  -1/RF              ,    0                          ,    0],
[0        ,   B1/rpi1       ,1/RC1+1/RB1+1/RB2+s*C2,  -s*C2   , -1/RB2          ,    0                   ,    0                , -1/RB1                        ,    0],
[0        ,    0            ,   -s*C2              ,s*C2+1/RG1,    0            ,    0                   ,    0                ,    0                          ,  -1/RG1],
[0        ,    0            ,   -1/RB2             ,    0     ,1/RB2+1/rpi2+s*C3, -1/rpi2                ,    0                ,    0                          ,  -s*C3],
[0        ,    0            ,    0                 ,    0     ,-B2/rpi2-1/rpi2  ,B2/rpi2+1/rpi2+1/RE2+s*C,   -s*C              ,    0                          ,    0],
[0        ,  -1/RF          ,    0                 ,    0     ,    0            ,   -s*C                  ,s*C+1/(s*L)+1/RF+1/RQ,-1/RQ-1/(s*L)                  ,    0],
[0        ,    0            ,    -1/RB1            ,    0     ,    0            ,    0                   ,-1/RQ-1/(s*L)        ,1/RQ+1/(s*L)+1/RB1+1/RB12+s*CB1,    0],
[0        ,    0            ,    0                 ,   -1/RG1 ,    -s*C3        ,    0                   ,       0             ,      0            , s*C3+1/RG1+1/RG2]
)$
det1: determinant(%)$           /* evaluates the determinant of the previous output % */
DEN_fs: factor(det1)$        /* expands the result and factors to common denominator, save to variable DEN_fs */
DEN_den: denom(DEN_fs)$   /* saves a variable DEN_den for denominator expression */ 
pld: num(DEN_fs)$         /* saves a variable pld for numerator expression */
/* extract denominator coefficients in the powers of s to designated variables */
DEN_ZRe: coeff(pld,s,6);
DEN_YIm: coeff(pld,s,5);
DEN_XRe: coeff(pld,s,4);
DEN_AIm: coeff(pld,s,3);
DEN_BRe: coeff(pld,s,2);
DEN_CIm: coeff(pld,s,1);
DEN_DRe: coeff(pld,s,0);
closefile();

/* matrix to solve Iout using Cramer's rule */
writefile("num_wah.txt");
matrix(
[-s*CI    , s*CI+1/rpi1+1/RF,    0                 ,    0            ,    0                   ,  -1/RF              ,    0                          ,    0],
[0        ,   B1/rpi1       ,1/RC1+1/RB1+1/RB2+s*C2, -1/RB2          ,    0                   ,    0                , -1/RB1                        ,    0],
[0        ,    0            ,   -s*C2              ,    0            ,    0                   ,    0                ,    0                          ,  -1/RG1],
[0        ,    0            ,   -1/RB2             ,1/RB2+1/rpi2+s*C3, -1/rpi2                ,    0                ,    0                          ,  -s*C3],
[0        ,    0            ,    0                 ,-B2/rpi2-1/rpi2  ,B2/rpi2+1/rpi2+1/RE2+s*C,   -s*C              ,    0                          ,    0],
[0        ,  -1/RF          ,    0                 ,    0            ,   -s*C                  ,s*C+1/(s*L)+1/RF+1/RQ,-1/RQ-1/(s*L)                  ,    0],
[0        ,    0            ,    -1/RB1            ,    0            ,    0                   ,-1/RQ-1/(s*L)        ,1/RQ+1/(s*L)+1/RB1+1/RB12+s*CB1,    0],
[0        ,    0            ,    0                 ,    -s*C3        ,    0                   ,       0             ,      0            , s*C3+1/RG1+1/RG2]
)$
Ib: (-1/RI)*determinant(%)$
NUM_fs: factor(%)$
NUM_den: denom(NUM_fs)$
pln: expand(num(NUM_fs)*DEN_den/NUM_den)$   /* expand to common denominator for numerator and denominator in Cramer's division */
/* extract numerator coefficients in the powers of s to designated variables */
NUM_ZRe: coeff(pln,s,6);
NUM_YIm: coeff(pln,s,5);
NUM_XRe: coeff(pln,s,4);
NUM_AIm: coeff(pln,s,3);
NUM_BRe: coeff(pln,s,2);
NUM_CIm: coeff(pln,s,1);
NUM_DRe: coeff(pln,s,0);
DEN_den;
NUM_den;
DEN_den/NUM_den;
closefile();

